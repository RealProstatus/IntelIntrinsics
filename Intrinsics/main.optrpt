Global optimization report for : ?addVectors@@YAXPEBN0PEANH@Z

LOOP BEGIN at main.cpp (14, 0)
    remark #25530: Stmt at line 14 sinked after loop using last value computation
    remark #15300: LOOP WAS VECTORIZED
    remark #15305: vectorization support: vector length 4
    remark #15389: vectorization support: unmasked unaligned unit stride load: v1 [ C:\Users\Иван\Desktop\IntelIntrinsics\Intrinsics\main.cpp (15, 0) ] 
    remark #15389: vectorization support: unmasked unaligned unit stride load: v2 [ C:\Users\Иван\Desktop\IntelIntrinsics\Intrinsics\main.cpp (16, 0) ] 
    remark #15389: vectorization support: unmasked unaligned unit stride store: out [ C:\Users\Иван\Desktop\IntelIntrinsics\Intrinsics\main.cpp (20, 0) ] 
    remark #15475: --- begin vector loop cost summary ---
    remark #15476: scalar cost: 8.000000 
    remark #15477: vector cost: 6.750000 
    remark #15478: estimated potential speedup: 1.171875 
    remark #15309: vectorization support: normalized vectorization overhead 0.281250
    remark #15488: --- end vector loop cost summary ---
    remark #15447: --- begin vector loop memory reference summary ---
    remark #15450: unmasked unaligned unit stride loads: 2 
    remark #15451: unmasked unaligned unit stride stores: 1 
    remark #15474: --- end vector loop memory reference summary ---
LOOP END

LOOP BEGIN at main.cpp (14, 0)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at main.cpp (23, 0)
    remark #25530: Stmt at line 23 sinked after loop using last value computation
    remark #15300: LOOP WAS VECTORIZED
    remark #15305: vectorization support: vector length 4
    remark #15389: vectorization support: unmasked unaligned unit stride load: v1 [ C:\Users\Иван\Desktop\IntelIntrinsics\Intrinsics\main.cpp (24, 0) ] 
    remark #15389: vectorization support: unmasked unaligned unit stride load: v2 [ C:\Users\Иван\Desktop\IntelIntrinsics\Intrinsics\main.cpp (25, 0) ] 
    remark #15389: vectorization support: unmasked unaligned unit stride store: out [ C:\Users\Иван\Desktop\IntelIntrinsics\Intrinsics\main.cpp (29, 0) ] 
    remark #15475: --- begin vector loop cost summary ---
    remark #15476: scalar cost: 9.000000 
    remark #15477: vector cost: 5.250000 
    remark #15478: estimated potential speedup: 1.687500 
    remark #15309: vectorization support: normalized vectorization overhead 0.375000
    remark #15488: --- end vector loop cost summary ---
    remark #15447: --- begin vector loop memory reference summary ---
    remark #15450: unmasked unaligned unit stride loads: 2 
    remark #15451: unmasked unaligned unit stride stores: 1 
    remark #15474: --- end vector loop memory reference summary ---
LOOP END

LOOP BEGIN at main.cpp (23, 0)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at main.cpp (32, 0)
    remark #15300: LOOP WAS VECTORIZED
    remark #15305: vectorization support: vector length 4
    remark #15389: vectorization support: unmasked unaligned unit stride load: v2 [ C:\Users\Иван\Desktop\IntelIntrinsics\Intrinsics\main.cpp (33, 0) ] 
    remark #15389: vectorization support: unmasked unaligned unit stride load: v1 [ C:\Users\Иван\Desktop\IntelIntrinsics\Intrinsics\main.cpp (33, 0) ] 
    remark #15389: vectorization support: unmasked unaligned unit stride store: out [ C:\Users\Иван\Desktop\IntelIntrinsics\Intrinsics\main.cpp (33, 0) ] 
    remark #15475: --- begin vector loop cost summary ---
    remark #15476: scalar cost: 7.000000 
    remark #15477: vector cost: 2.687500 
    remark #15478: estimated potential speedup: 2.531250 
    remark #15309: vectorization support: normalized vectorization overhead 0.734375
    remark #15488: --- end vector loop cost summary ---
    remark #15447: --- begin vector loop memory reference summary ---
    remark #15450: unmasked unaligned unit stride loads: 2 
    remark #15451: unmasked unaligned unit stride stores: 1 
    remark #15474: --- end vector loop memory reference summary ---
LOOP END

LOOP BEGIN at main.cpp (32, 0)
<Remainder loop for vectorization>
LOOP END
=================================================================

Global optimization report for : ?mulVectors@@YAXPEBN0PEANH@Z

LOOP BEGIN at main.cpp (40, 0)
    remark #25530: Stmt at line 40 sinked after loop using last value computation
    remark #15300: LOOP WAS VECTORIZED
    remark #15305: vectorization support: vector length 4
    remark #15389: vectorization support: unmasked unaligned unit stride load: v1 [ C:\Users\Иван\Desktop\IntelIntrinsics\Intrinsics\main.cpp (41, 0) ] 
    remark #15389: vectorization support: unmasked unaligned unit stride load: v2 [ C:\Users\Иван\Desktop\IntelIntrinsics\Intrinsics\main.cpp (42, 0) ] 
    remark #15389: vectorization support: unmasked unaligned unit stride store: out [ C:\Users\Иван\Desktop\IntelIntrinsics\Intrinsics\main.cpp (46, 0) ] 
    remark #15475: --- begin vector loop cost summary ---
    remark #15476: scalar cost: 8.000000 
    remark #15477: vector cost: 6.750000 
    remark #15478: estimated potential speedup: 1.171875 
    remark #15309: vectorization support: normalized vectorization overhead 0.281250
    remark #15488: --- end vector loop cost summary ---
    remark #15447: --- begin vector loop memory reference summary ---
    remark #15450: unmasked unaligned unit stride loads: 2 
    remark #15451: unmasked unaligned unit stride stores: 1 
    remark #15474: --- end vector loop memory reference summary ---
LOOP END

LOOP BEGIN at main.cpp (40, 0)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at main.cpp (49, 0)
    remark #25530: Stmt at line 49 sinked after loop using last value computation
    remark #15300: LOOP WAS VECTORIZED
    remark #15305: vectorization support: vector length 4
    remark #15389: vectorization support: unmasked unaligned unit stride load: v1 [ C:\Users\Иван\Desktop\IntelIntrinsics\Intrinsics\main.cpp (50, 0) ] 
    remark #15389: vectorization support: unmasked unaligned unit stride load: v2 [ C:\Users\Иван\Desktop\IntelIntrinsics\Intrinsics\main.cpp (51, 0) ] 
    remark #15389: vectorization support: unmasked unaligned unit stride store: out [ C:\Users\Иван\Desktop\IntelIntrinsics\Intrinsics\main.cpp (55, 0) ] 
    remark #15475: --- begin vector loop cost summary ---
    remark #15476: scalar cost: 9.000000 
    remark #15477: vector cost: 5.250000 
    remark #15478: estimated potential speedup: 1.687500 
    remark #15309: vectorization support: normalized vectorization overhead 0.375000
    remark #15488: --- end vector loop cost summary ---
    remark #15447: --- begin vector loop memory reference summary ---
    remark #15450: unmasked unaligned unit stride loads: 2 
    remark #15451: unmasked unaligned unit stride stores: 1 
    remark #15474: --- end vector loop memory reference summary ---
LOOP END

LOOP BEGIN at main.cpp (49, 0)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at main.cpp (58, 0)
    remark #15300: LOOP WAS VECTORIZED
    remark #15305: vectorization support: vector length 4
    remark #15389: vectorization support: unmasked unaligned unit stride load: v2 [ C:\Users\Иван\Desktop\IntelIntrinsics\Intrinsics\main.cpp (59, 0) ] 
    remark #15389: vectorization support: unmasked unaligned unit stride load: v1 [ C:\Users\Иван\Desktop\IntelIntrinsics\Intrinsics\main.cpp (59, 0) ] 
    remark #15389: vectorization support: unmasked unaligned unit stride store: out [ C:\Users\Иван\Desktop\IntelIntrinsics\Intrinsics\main.cpp (59, 0) ] 
    remark #15475: --- begin vector loop cost summary ---
    remark #15476: scalar cost: 7.000000 
    remark #15477: vector cost: 2.687500 
    remark #15478: estimated potential speedup: 2.531250 
    remark #15309: vectorization support: normalized vectorization overhead 0.734375
    remark #15488: --- end vector loop cost summary ---
    remark #15447: --- begin vector loop memory reference summary ---
    remark #15450: unmasked unaligned unit stride loads: 2 
    remark #15451: unmasked unaligned unit stride stores: 1 
    remark #15474: --- end vector loop memory reference summary ---
LOOP END

LOOP BEGIN at main.cpp (58, 0)
<Remainder loop for vectorization>
LOOP END
=================================================================

Global optimization report for : ?scalarMult@@YANPEBN0H@Z

LOOP BEGIN at main.cpp (69, 0)
    remark #25530: Stmt at line 69 sinked after loop using last value computation
    remark #15344: Loop was not vectorized: vector dependence prevents vectorization
    remark #15346: vector dependence: assumed FLOW dependence between x3 [ C:\Users\Иван\Desktop\IntelIntrinsics\Intrinsics\main.cpp (73, 0) ] and x3 [ C:\Users\Иван\Desktop\IntelIntrinsics\Intrinsics\main.cpp (73, 0) ] 
    remark #25439: Loop unrolled with remainder by 8
LOOP END

LOOP BEGIN at main.cpp (69, 0)
<Remainder loop>
LOOP END

LOOP BEGIN at main.cpp (82, 0)
    remark #15300: LOOP WAS VECTORIZED
    remark #15305: vectorization support: vector length 4
    remark #15389: vectorization support: unmasked unaligned unit stride load: v2 [ C:\Users\Иван\Desktop\IntelIntrinsics\Intrinsics\main.cpp (83, 0) ] 
    remark #15389: vectorization support: unmasked unaligned unit stride load: v1 [ C:\Users\Иван\Desktop\IntelIntrinsics\Intrinsics\main.cpp (83, 0) ] 
    remark #15475: --- begin vector loop cost summary ---
    remark #15476: scalar cost: 7.000000 
    remark #15477: vector cost: 2.593750 
    remark #15478: estimated potential speedup: 2.609375 
    remark #15309: vectorization support: normalized vectorization overhead 2.312500
    remark #15488: --- end vector loop cost summary ---
    remark #15447: --- begin vector loop memory reference summary ---
    remark #15450: unmasked unaligned unit stride loads: 2 
    remark #15474: --- end vector loop memory reference summary ---
    remark #25587: Loop has reduction
    remark #15590: vectorization support: add reduction with value type double [main.cpp:83]
LOOP END

LOOP BEGIN at main.cpp (82, 0)
<Remainder loop for vectorization>
LOOP END
=================================================================

Global optimization report for : main

LOOP BEGIN at C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.39.33519\include\random (1130, 0)
    remark #15344: Loop was not vectorized: vector dependence prevents vectorization
    remark #15346: vector dependence: assumed FLOW dependence between _Prev [ C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.39.33519\include\random (1131, 0) ] and _Prev [ C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.39.33519\include\random (1131, 0) ] 
    remark #15346: vector dependence: assumed FLOW dependence between _Prev [ C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.39.33519\include\random (1131, 0) ] and _Prev [ C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.39.33519\include\random (1131, 0) ] 
    remark #25439: Loop unrolled with remainder by 8
LOOP END

LOOP BEGIN at C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.39.33519\include\random (1130, 0)
<Remainder loop>
LOOP END

LOOP BEGIN at main.cpp (100, 0)
    remark #15527: Loop was not vectorized: function call to  cannot be vectorized
    remark #25438: Loop unrolled without remainder by 8
LOOP END

LOOP BEGIN at main.cpp (14, 0)
    remark #15300: LOOP WAS VECTORIZED
    remark #15305: vectorization support: vector length 4
    remark #15389: vectorization support: unmasked unaligned unit stride load: v1 a [ C:\Users\Иван\Desktop\IntelIntrinsics\Intrinsics\main.cpp (15, 0) ] 
    remark #15389: vectorization support: unmasked unaligned unit stride load: v2 b [ C:\Users\Иван\Desktop\IntelIntrinsics\Intrinsics\main.cpp (16, 0) ] 
    remark #15389: vectorization support: unmasked unaligned unit stride store: out c [ C:\Users\Иван\Desktop\IntelIntrinsics\Intrinsics\main.cpp (20, 0) ] 
    remark #15475: --- begin vector loop cost summary ---
    remark #15476: scalar cost: 8.000000 
    remark #15477: vector cost: 6.750000 
    remark #15478: estimated potential speedup: 1.171875 
    remark #15309: vectorization support: normalized vectorization overhead 0.000000
    remark #15570: using scalar loop trip count: 1000000
    remark #15488: --- end vector loop cost summary ---
    remark #15447: --- begin vector loop memory reference summary ---
    remark #15450: unmasked unaligned unit stride loads: 2 
    remark #15451: unmasked unaligned unit stride stores: 1 
    remark #15474: --- end vector loop memory reference summary ---
LOOP END
=================================================================

Global optimization report for : ??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_real@N@std@@QEAANAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@@Z

LOOP BEGIN at C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.39.33519\include\random (287, 0)
    remark #15541: loop was not vectorized: outer loop is not an auto-vectorization candidate.

    LOOP BEGIN at C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.39.33519\include\random (1226, 0)
        remark #15300: LOOP WAS VECTORIZED
        remark #15305: vectorization support: vector length 8
        remark #15389: vectorization support: unmasked unaligned unit stride load: this _Gx _Gx _Eng _Eng [ C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.39.33519\include\random (1227, 0) ] 
        remark #15389: vectorization support: unmasked unaligned unit stride load: this _Gx _Gx _Eng _Eng [ C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.39.33519\include\random (1227, 0) ] 
        remark #15389: vectorization support: unmasked unaligned unit stride load: this _Gx _Gx _Eng _Eng [ C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.39.33519\include\random (1228, 0) ] 
        remark #15389: vectorization support: unmasked unaligned unit stride store: this _Gx _Gx _Eng _Eng [ C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.39.33519\include\random (1228, 0) ] 
        remark #15475: --- begin vector loop cost summary ---
        remark #15476: scalar cost: 19.000000 
        remark #15477: vector cost: 4.750000 
        remark #15478: estimated potential speedup: 3.859375 
        remark #15309: vectorization support: normalized vectorization overhead 0.000000
        remark #15570: using scalar loop trip count: 227
        remark #15488: --- end vector loop cost summary ---
        remark #15447: --- begin vector loop memory reference summary ---
        remark #15450: unmasked unaligned unit stride loads: 3 
        remark #15451: unmasked unaligned unit stride stores: 1 
        remark #15474: --- end vector loop memory reference summary ---
    LOOP END

    LOOP BEGIN at C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.39.33519\include\random (1226, 0)
    <Remainder loop for vectorization>
        remark #15439: remainder loop was vectorized (unmasked)
        remark #15305: vectorization support: vector length 2
        remark #15389: vectorization support: unmasked unaligned unit stride load: this _Gx _Gx _Eng _Eng [ C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.39.33519\include\random (1227, 0) ] 
        remark #15389: vectorization support: unmasked unaligned unit stride load: this _Gx _Gx _Eng _Eng [ C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.39.33519\include\random (1227, 0) ] 
        remark #15389: vectorization support: unmasked unaligned unit stride load: this _Gx _Gx _Eng _Eng [ C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.39.33519\include\random (1228, 0) ] 
        remark #15389: vectorization support: unmasked unaligned unit stride store: this _Gx _Gx _Eng _Eng [ C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.39.33519\include\random (1228, 0) ] 
        remark #15475: --- begin vector loop cost summary ---
        remark #15488: --- end vector loop cost summary ---
        remark #15447: --- begin vector loop memory reference summary ---
        remark #15450: unmasked unaligned unit stride loads: 3 
        remark #15451: unmasked unaligned unit stride stores: 1 
        remark #15474: --- end vector loop memory reference summary ---
    LOOP END

    LOOP BEGIN at C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.39.33519\include\random (1226, 0)
    <Remainder loop for vectorization>
        remark #25583: Number of Array Refs Scalar Replaced In Loop: 1
    LOOP END

    LOOP BEGIN at C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.39.33519\include\random (1231, 0)
        remark #15344: Loop was not vectorized: vector dependence prevents vectorization
        remark #15346: vector dependence: assumed FLOW dependence between this _Gx _Gx _Eng _Eng [ C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.39.33519\include\random (1234, 0) ] and this _Gx _Gx _Eng _Eng [ C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.39.33519\include\random (1234, 0) ] 
        remark #25438: Loop unrolled without remainder by 4
        remark #25583: Number of Array Refs Scalar Replaced In Loop: 4
    LOOP END

    LOOP BEGIN at C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.39.33519\include\random (1249, 0)
        remark #15344: Loop was not vectorized: vector dependence prevents vectorization
        remark #15346: vector dependence: assumed FLOW dependence between this _Gx _Gx _Eng _Eng [ C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.39.33519\include\random (1251, 0) ] and this _Gx _Gx _Eng _Eng [ C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.39.33519\include\random (1250, 0) ] 
        remark #15346: vector dependence: assumed FLOW dependence between this _Gx _Gx _Eng _Eng [ C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.39.33519\include\random (1251, 0) ] and this _Gx _Gx _Eng _Eng [ C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.39.33519\include\random (1251, 0) ] 
        remark #25438: Loop unrolled without remainder by 4
        remark #25583: Number of Array Refs Scalar Replaced In Loop: 4
    LOOP END
LOOP END
=================================================================

---- Begin Inlining Report ----
Option Values:
  inline-threshold: 225
  inlinehint-threshold: 325
  inlinecold-threshold: 45
  inlineoptsize-threshold: 15

DEAD STATIC FUNC: ??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z

DEAD STATIC FUNC: ??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEAA@AEB_J@Z

DEAD STATIC FUNC: ??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z

DEAD STATIC FUNC: ??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z

DEAD STATIC FUNC: ??$_Eval@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_real@N@std@@AEBANAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@AEBUparam_type@01@@Z

DEAD STATIC FUNC: ??$_Nrand_impl@NV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@std@@YANAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@0@@Z

DEAD STATIC FUNC: ??$duration_cast@V?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z

DEAD STATIC FUNC: ??$generate_canonical@N$0DF@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@std@@YANAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@0@@Z

DEAD STATIC FUNC: ??0?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@QEAA@III@Z

DEAD STATIC FUNC: ??0?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@QEAA@I@Z

DEAD STATIC FUNC: ??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z

DEAD STATIC FUNC: ??0?$uniform_real@N@std@@QEAA@NN@Z

DEAD STATIC FUNC: ??0?$uniform_real_distribution@N@std@@QEAA@NN@Z

DEAD STATIC FUNC: ??0param_type@?$uniform_real@N@std@@QEAA@NN@Z

DEAD STATIC FUNC: ??R?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@QEAAIXZ

DEAD STATIC FUNC: ??Rrandom_device@std@@QEAAIXZ

DEAD STATIC FUNC: ?_Init@param_type@?$uniform_real@N@std@@QEAAXNN@Z

DEAD STATIC FUNC: ?_Refill_lower@?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@IEAAXXZ

DEAD STATIC FUNC: ?_Refill_upper@?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@IEAAXXZ

DEAD STATIC FUNC: ?_mm256_add_pd@@YA?AU__m256d@@U1@0@Z

DEAD STATIC FUNC: ?_mm256_fmadd_pd@@YA?AU__m256d@@U1@00@Z

DEAD STATIC FUNC: ?_mm256_load_pd@@YA?AU__m256d@@PEBN@Z

DEAD STATIC FUNC: ?_mm256_mul_pd@@YA?AU__m256d@@U1@0@Z

DEAD STATIC FUNC: ?_mm256_setzero_pd@@YA?AU__m256d@@XZ

DEAD STATIC FUNC: ?_mm256_store_pd@@YAXPEANU__m256d@@@Z

DEAD STATIC FUNC: ?_mm_add_pd@@YA?AU__m128d@@U1@0@Z

DEAD STATIC FUNC: ?_mm_load_pd@@YA?AU__m128d@@PEBN@Z

DEAD STATIC FUNC: ?_mm_mul_pd@@YA?AU__m128d@@U1@0@Z

DEAD STATIC FUNC: ?_mm_store_pd@@YAXPEANU__m128d@@@Z

DEAD STATIC FUNC: ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ

DEAD STATIC FUNC: ?max@?$numeric_limits@N@std@@SANXZ

DEAD STATIC FUNC: ?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ

DEAD STATIC FUNC: ?seed@?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@QEAAXII@Z

DEAD STATIC FUNC: ?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ

DEAD STATIC FUNC: _CrtDbgReport

DEAD STATIC FUNC: _invalid_parameter

DEAD STATIC FUNC: llvm.debugtrap

DEAD STATIC FUNC: llvm.memcpy.p0.p0.i64

DEAD STATIC FUNC: llvm.ssa.copy.f64

DEAD STATIC FUNC: llvm.ssa.copy.i1

DEAD STATIC FUNC: llvm.ssa.copy.i32

DEAD STATIC FUNC: llvm.ssa.copy.i64

COMPILE FUNC: ?scalarMult@@YANPEBN0H@Z
   -> INLINE: ?_mm256_load_pd@@YA?AU__m256d@@PEBN@Z main.cpp (71,0)
   -> INLINE: ?_mm256_load_pd@@YA?AU__m256d@@PEBN@Z main.cpp (70,0)
   -> INLINE: ?_mm256_store_pd@@YAXPEANU__m256d@@@Z main.cpp (77,0)
   -> INLINE: ?_mm256_setzero_pd@@YA?AU__m256d@@XZ main.cpp (67,0)
   -> INLINE: ?_mm256_fmadd_pd@@YA?AU__m256d@@U1@00@Z main.cpp (73,0)
      -> DELETE: llvm.fma.v4f64 main.cpp
      -> llvm.fma.v4f64 main.cpp
      -> llvm.fma.v4f64 main.cpp
      -> llvm.fma.v4f64 main.cpp
      -> llvm.fma.v4f64 main.cpp
      -> llvm.fma.v4f64 main.cpp
      -> llvm.fma.v4f64 main.cpp
      -> llvm.fma.v4f64 main.cpp
      -> llvm.fma.v4f64 main.cpp
      -> llvm.fma.v4f64 main.cpp
   -> DELETE: llvm.vector.reduce.fadd.v4f64 main.cpp (83,0)
   -> llvm.vector.reduce.fadd.v4f64 main.cpp (83,0)
   -> DELETE: llvm.ssa.copy.i64 main.cpp (69,0)
   -> DELETE: llvm.ssa.copy.i64 main.cpp (82,0)
   -> llvm.vector.reduce.fadd.v4f64 main.cpp (79,0)

COMPILE FUNC: ?mulVectors@@YAXPEBN0PEANH@Z
   -> INLINE: ?_mm256_load_pd@@YA?AU__m256d@@PEBN@Z main.cpp (42,0)
   -> INLINE: ?_mm256_load_pd@@YA?AU__m256d@@PEBN@Z main.cpp (41,0)
   -> INLINE: ?_mm256_store_pd@@YAXPEANU__m256d@@@Z main.cpp (46,0)
   -> INLINE: ?_mm_load_pd@@YA?AU__m128d@@PEBN@Z main.cpp (51,0)
   -> INLINE: ?_mm_load_pd@@YA?AU__m128d@@PEBN@Z main.cpp (50,0)
   -> INLINE: ?_mm_store_pd@@YAXPEANU__m128d@@@Z main.cpp (55,0)
   -> INLINE: ?_mm256_mul_pd@@YA?AU__m256d@@U1@0@Z main.cpp (44,0)
   -> INLINE: ?_mm_mul_pd@@YA?AU__m128d@@U1@0@Z main.cpp (53,0)
   -> DELETE: llvm.ssa.copy.i64 main.cpp (40,0)
   -> DELETE: llvm.ssa.copy.i64 main.cpp (49,0)
   -> DELETE: llvm.ssa.copy.i64 main.cpp (58,0)
   -> DELETE: llvm.smax.i64 main.cpp (49,0)
   -> DELETE: llvm.smax.i64 main.cpp (49,0)
   -> DELETE: llvm.smax.i64 main.cpp
   -> DELETE: llvm.smax.i64 main.cpp (40,0)
   -> DELETE: llvm.smax.i64 main.cpp (49,0)
   -> llvm.smax.i64 main.cpp (49,0)

COMPILE FUNC: ?addVectors@@YAXPEBN0PEANH@Z
   -> INLINE: ?_mm256_load_pd@@YA?AU__m256d@@PEBN@Z main.cpp (16,0)
   -> INLINE: ?_mm256_load_pd@@YA?AU__m256d@@PEBN@Z main.cpp (15,0)
   -> INLINE: ?_mm256_add_pd@@YA?AU__m256d@@U1@0@Z main.cpp (18,0)
   -> INLINE: ?_mm256_store_pd@@YAXPEANU__m256d@@@Z main.cpp (20,0)
   -> INLINE: ?_mm_load_pd@@YA?AU__m128d@@PEBN@Z main.cpp (25,0)
   -> INLINE: ?_mm_load_pd@@YA?AU__m128d@@PEBN@Z main.cpp (24,0)
   -> INLINE: ?_mm_add_pd@@YA?AU__m128d@@U1@0@Z main.cpp (27,0)
   -> INLINE: ?_mm_store_pd@@YAXPEANU__m128d@@@Z main.cpp (29,0)
   -> DELETE: llvm.ssa.copy.i64 main.cpp (14,0)
   -> DELETE: llvm.ssa.copy.i64 main.cpp (23,0)
   -> DELETE: llvm.ssa.copy.i64 main.cpp (32,0)
   -> DELETE: llvm.smax.i64 main.cpp (23,0)
   -> DELETE: llvm.smax.i64 main.cpp (23,0)
   -> DELETE: llvm.smax.i64 main.cpp
   -> DELETE: llvm.smax.i64 main.cpp (14,0)
   -> DELETE: llvm.smax.i64 main.cpp (23,0)
   -> llvm.smax.i64 main.cpp (23,0)

COMPILE FUNC: ??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_real@N@std@@QEAANAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@@Z
   -> INLINE: ??$_Eval@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_real@N@std@@AEBANAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@AEBUparam_type@01@@Z main.cpp (2900,0) (-14540<=250)
      -> INLINE: ??$_Nrand_impl@NV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@std@@YANAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@0@@Z main.cpp (2940,0) (-14555<=250)
         -> INLINE: ??$generate_canonical@N$0DF@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@std@@YANAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@0@@Z main.cpp (312,0) (-14555<=250)
            -> INLINE: ??R?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@QEAAIXZ main.cpp (288,0) (-14585<=250)
               -> INLINE: ?_Refill_upper@?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@IEAAXXZ main.cpp (1188,0) (-14940<=250)
               -> INLINE: ?_Refill_lower@?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@IEAAXXZ main.cpp (1190,0) (-14775<=250)
   -> DELETE: llvm.ssa.copy.i32 main.cpp
   -> DELETE: llvm.ssa.copy.f64 main.cpp
   -> DELETE: llvm.ssa.copy.i64 main.cpp
   -> DELETE: llvm.ssa.copy.i64 main.cpp (1249,0)
   -> DELETE: llvm.ssa.copy.i64 main.cpp
   -> DELETE: llvm.ssa.copy.i64 main.cpp (1226,0)
   -> DELETE: llvm.ssa.copy.i64 main.cpp
   -> DELETE: llvm.ssa.copy.i64 main.cpp (1231,0)
   -> DELETE: llvm.ssa.copy.i32 main.cpp
   -> DELETE: llvm.ssa.copy.i32 main.cpp
   -> DELETE: llvm.ssa.copy.i32 main.cpp (1193,0)
   -> DELETE: llvm.ssa.copy.i32 main.cpp (1193,0)
   -> DELETE: llvm.ssa.copy.i1 main.cpp

COMPILE FUNC: main
   -> INLINE: ??Rrandom_device@std@@QEAAIXZ main.cpp (93,0) (-15005<=375)
      -> EXTERN: ?_Random_device@std@@YAIXZ main.cpp (5306,0)
   -> INLINE: ??0?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@QEAA@I@Z main.cpp (93,0) (-14985<=250)
      -> INLINE: ??0?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@QEAA@III@Z main.cpp (1299,0) (-14995<=250)
         -> INLINE: ?seed@?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@QEAAXII@Z main.cpp (1119,0) (-14995<=250)
   -> INLINE: ??0?$uniform_real_distribution@N@std@@QEAA@NN@Z main.cpp (94,0) (-15045<=375)
      -> INLINE: ??0?$uniform_real@N@std@@QEAA@NN@Z main.cpp (2971,0) (-14870<=250)
         -> INLINE: ??0param_type@?$uniform_real@N@std@@QEAA@NN@Z main.cpp (2868,0) (-14870<=250)
            -> INLINE: ?_Init@param_type@?$uniform_real@N@std@@QEAAXNN@Z main.cpp (2832,0) (-14870<=250)
               -> INLINE: ?max@?$numeric_limits@N@std@@SANXZ main.cpp (2856,0) (-15030<=375)
               -> DELETE: _CrtDbgReport main.cpp (2856,0)
               -> DELETE: llvm.debugtrap main.cpp (2856,0)
               -> DELETE: _invalid_parameter main.cpp (2856,0)
   -> EXTERN: _aligned_malloc main.cpp (96,0)
   -> EXTERN: _aligned_malloc main.cpp (97,0)
   -> EXTERN: _aligned_malloc main.cpp (98,0)
   -> INLINE: ?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ main.cpp (105,0) (125<=250)
      -> EXTERN: _Query_perf_frequency main.cpp (679,0)
      -> EXTERN: _Query_perf_counter main.cpp (680,0)
      -> INLINE: ??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z main.cpp (693,0) (-40<=375)
      -> INLINE: ??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z main.cpp (693,0) (-35<=375)
      -> INLINE: ??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z main.cpp (698,0) (-40<=45)
      -> INLINE: ??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z main.cpp (698,0) (-35<=45)
      -> INLINE: ??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z main.cpp (707,0) (-40<=45)
      -> INLINE: ??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z main.cpp (707,0) (-35<=45)
   -> INLINE: ?addVectors@@YAXPEBN0PEANH@Z main.cpp (106,0) (75<=438)
      -> INLINE: ?_mm256_load_pd@@YA?AU__m256d@@PEBN@Z main.cpp (16,0)
      -> INLINE: ?_mm256_load_pd@@YA?AU__m256d@@PEBN@Z main.cpp (15,0)
      -> INLINE: ?_mm256_add_pd@@YA?AU__m256d@@U1@0@Z main.cpp (18,0)
      -> INLINE: ?_mm256_store_pd@@YAXPEANU__m256d@@@Z main.cpp (20,0)
      -> INLINE: ?_mm_load_pd@@YA?AU__m128d@@PEBN@Z main.cpp (25,0)
      -> INLINE: ?_mm_load_pd@@YA?AU__m128d@@PEBN@Z main.cpp (24,0)
      -> INLINE: ?_mm_add_pd@@YA?AU__m128d@@U1@0@Z main.cpp (27,0)
      -> INLINE: ?_mm_store_pd@@YAXPEANU__m128d@@@Z main.cpp (29,0)
   -> INLINE: ?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ main.cpp (107,0) (-14875<=250)
      -> EXTERN: _Query_perf_frequency main.cpp (679,0)
      -> EXTERN: _Query_perf_counter main.cpp (680,0)
      -> INLINE: ??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z main.cpp (693,0) (-40<=375)
      -> INLINE: ??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z main.cpp (693,0) (-35<=375)
      -> INLINE: ??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z main.cpp (698,0) (-40<=45)
      -> INLINE: ??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z main.cpp (698,0) (-35<=45)
      -> INLINE: ??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z main.cpp (707,0) (-40<=45)
      -> INLINE: ??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z main.cpp (707,0) (-35<=45)
   -> INLINE: ??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z main.cpp (109,0) (-15040<=375)
      -> INLINE: ?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ main.cpp (549,0) (-35<=375)
      -> INLINE: ?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ main.cpp (549,0) (-15035<=375)
      -> INLINE: ??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z main.cpp (549,0) (-15035<=375)
         -> INLINE: ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ main.cpp (291,0) (-35<=375)
         -> INLINE: ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ main.cpp (291,0) (-35<=375)
         -> INLINE: ??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z main.cpp (291,0) (-15035<=375)
   -> INLINE: ??$duration_cast@V?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z main.cpp (109,0) (-15035<=375)
      -> INLINE: ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ main.cpp (440,0) (-15030<=375)
      -> INLINE: ??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEAA@AEB_J@Z main.cpp (440,0) (-15035<=375)
   -> EXTERN: _aligned_free main.cpp (113,0)
   -> EXTERN: _aligned_free main.cpp (114,0)
   -> EXTERN: _aligned_free main.cpp (115,0)
   -> DELETE: ??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_real@N@std@@QEAANAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@@Z main.cpp (101,0)
   -> DELETE: ??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_real@N@std@@QEAANAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@@Z main.cpp (102,0)
   -> ??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_real@N@std@@QEAANAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@@Z main.cpp (101,0) (455>250)
   -> ??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_real@N@std@@QEAANAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@@Z main.cpp (102,0) (455>250)
   -> ??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_real@N@std@@QEAANAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@@Z main.cpp (101,0) (455>250)
   -> ??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_real@N@std@@QEAANAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@@Z main.cpp (102,0) (455>250)
   -> ??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_real@N@std@@QEAANAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@@Z main.cpp (101,0) (455>250)
   -> ??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_real@N@std@@QEAANAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@@Z main.cpp (102,0) (455>250)
   -> ??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_real@N@std@@QEAANAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@@Z main.cpp (101,0) (455>250)
   -> ??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_real@N@std@@QEAANAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@@Z main.cpp (102,0) (455>250)
   -> ??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_real@N@std@@QEAANAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@@Z main.cpp (101,0) (455>250)
   -> ??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_real@N@std@@QEAANAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@@Z main.cpp (102,0) (455>250)
   -> ??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_real@N@std@@QEAANAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@@Z main.cpp (101,0) (455>250)
   -> ??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_real@N@std@@QEAANAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@@Z main.cpp (102,0) (455>250)
   -> ??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_real@N@std@@QEAANAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@@Z main.cpp (101,0) (455>250)
   -> ??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_real@N@std@@QEAANAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@@Z main.cpp (102,0) (455>250)
   -> ??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_real@N@std@@QEAANAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@@Z main.cpp (101,0) (455>250)
   -> ??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_real@N@std@@QEAANAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@@Z main.cpp (102,0) (455>250)
   -> DELETE: llvm.ssa.copy.i32 main.cpp
   -> DELETE: llvm.ssa.copy.i64 main.cpp (1130,0)
   -> DELETE: llvm.ssa.copy.i64 main.cpp (14,0)
   -> DELETE: llvm.ssa.copy.i64 main.cpp (100,0)

---- End Inlining Report ------
